# cloudbuild.yaml (Final Corrected Version)

# This tells the build where to store its logs, satisfying the security policy.
logsBucket: 'gs://notional-cocoa-470007-p5-build-logs'

steps:
# Step 1: Build all 5 of our service images
# We use $SHORT_SHA to give each build a unique version tag
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/api-gateway:$SHORT_SHA', '.']
  dir: 'api-gateway'
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/identity-service:$SHORT_SHA', '.']
  dir: 'identity-service'
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/media-service:$SHORT_SHA', '.']
  dir: 'media-service'
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/post-service:$SHORT_SHA', '.']
  dir: 'post-service'
- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/search-service:$SHORT_SHA', '.']
  dir: 'search-service'

# Step 2: Update our Kubernetes manifests with the new image versions
# This gke-deploy step is a powerful tool that does the 'kubectl apply' for us.
- name: 'gcr.io/cloud-builders/gke-deploy'
  args:
  - run
  - --filename=k8s
  - --image=gcr.io/$PROJECT_ID/api-gateway:$SHORT_SHA
  - --image=gcr.io/$PROJECT_ID/identity-service:$SHORT_SHA
  - --image=gcr.io/$PROJECT_ID/media-service:$SHORT_SHA
  - --image=gcr.io/$PROJECT_ID/post-service:$SHORT_SHA
  - --image=gcr.io/$PROJECT_ID/search-service:$SHORT_SHA
  - --location=asia-south1
  - --cluster=social-media-cluster

# Step 3: List all the images that need to be pushed to the registry
# Cloud Build automatically pushes any images listed here after the steps succeed.
images:
- 'gcr.io/$PROJECT_ID/api-gateway:$SHORT_SHA'
- 'gcr.io/$PROJECT_ID/identity-service:$SHORT_SHA'
- 'gcr.io/$PROJECT_ID/media-service:$SHORT_SHA'
- 'gcr.io/$PROJECT_ID/post-service:$SHORT_SHA'
- 'gcr.io/$PROJECT_ID/search-service:$SHORT_SHA'